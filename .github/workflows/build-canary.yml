name: Build Canary Release

on:
  push:
    branches:
      - main

jobs:
  build-canary:
    permissions:
      contents: write
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install frontend dependencies
        run: pnpm install

      # Added Rust installation and caching based on the second example
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          # Adjust the workspaces path if your tauri project is not directly in src-tauri
          workspaces: |
            ./src-tauri -> ./target

      - name: Set static canary tag
        id: tag
        run: |
          echo "tag=canary" >> $env:GITHUB_OUTPUT

      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_TOKEN }}
          GITHUB_REPOSITORY: ModpackStore/ModpackStore-Releases
        with:
          tagName: ${{ steps.tag.outputs.tag }}
          releaseName: "Canary Build ${{ steps.tag.outputs.tag }}"
          releaseBody: "Automated canary build for testing"
          releaseDraft: false
          prerelease: false
          includeUpdaterJson: true


      - name: Setup and Push to Release Repository
        run: |
          # Crear directorio temporal
          mkdir -p temp-release-repo
          cd temp-release-repo
          
          # Inicializar repo
          git init
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Configurar el remote
          git remote add origin https://github.com/ModpackStore/ModpackStore-Releases.git
          
          # Eliminar la tag remota primero para evitar errores de "archivo ya existe"
          git push origin :refs/tags/canary || echo "Remote tag doesn't exist yet, continuing"
          
          # Fetch la rama canary
          git fetch origin canary || echo "Branch canary doesn't exist yet"
          
          # Checkout a la rama canary si existe, sino crear una nueva
          git checkout canary 2>$null || git checkout -b canary
          
          # Limpiar todo excepto .git
          Get-ChildItem -Force | Where-Object { $_.Name -ne ".git" } | Remove-Item -Recurse -Force
          
          # Copiar los archivos de release, incluyendo el latest.json
          Copy-Item -Path ../src-tauri/target/release/bundle/* -Destination . -Recurse -Force
          
          # Buscar latest.json
          $latestJsonPath = Get-ChildItem -Path . -Recurse -Filter latest.json | Select-Object -First 1
          if ($latestJsonPath) {
              Copy-Item -Path $latestJsonPath.FullName -Destination . -Force
          } else {
              Write-Host "latest.json not found"
          }
          
          # Crear un README si no existe
          if (-not (Test-Path README.md)) {
            Set-Content -Path README.md -Value @"
          # ModpackStore Releases
          Este repositorio contiene solo las releases de ModpackStore.
          "@
          }
          
          # Commit y push
          git add -A
          git commit -m "Update canary release" || echo "No changes to commit"
          
          # Push con credenciales
          git push --force origin canary
          
          # Crear y hacer push del tag (ahora que la tag remota ha sido eliminada)
          git tag -f canary
          git push origin refs/tags/canary
        shell: pwsh
    
    
      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_TOKEN }}
          GITHUB_REPOSITORY: ModpackStore/ModpackStore-Releases
        with:
          owner: ModpackStore
          repo: ModpackStore-Releases
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Canary Build ${{ steps.tag.outputs.tag }}
          body: "Automated canary build for testing"
          files: |
            src-tauri/target/release/bundle/**/*
            *.json
          draft: false
          prerelease: false