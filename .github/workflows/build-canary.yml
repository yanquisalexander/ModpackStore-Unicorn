name: Build Canary Release

on:
  push:
    branches:
      - main

jobs:
  build-canary:
    permissions:
      contents: write
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install frontend dependencies
        run: pnpm install

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          workspaces: |
            ./src-tauri -> ./target

      - name: Set static canary tag
        id: tag
        run: |
          echo "tag=canary" >> $GITHUB_ENV

      - name: Remove existing canary release and tag (only once)
        if: matrix.os == 'ubuntu-latest'
        env:
          GH_TOKEN: ${{ secrets.PUBLIC_REPO_TOKEN }}
        run: |
          gh release delete canary --repo ModpackStore/ModpackStore-Releases --cleanup-tag -y || echo "No existing release to delete"
        continue-on-error: true

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf


      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_TOKEN }}
          GITHUB_REPOSITORY: ModpackStore/ModpackStore-Releases
        with:
          tagName: canary
          releaseName: "Canary Build canary"
          releaseBody: "Automated canary build for testing"
          releaseDraft: false
          prerelease: false
          includeUpdaterJson: true
          owner: ModpackStore
          repo: ModpackStore-Releases

      - name: Upload Release Artifacts
        uses: softprops/action-gh-release@v2
        if: matrix.os == 'ubuntu-latest' # solo una vez para evitar duplicados
        with:
          repository: ModpackStore/ModpackStore-Releases
          token: ${{ secrets.PUBLIC_REPO_TOKEN }}
          tag_name: canary
          name: Canary Build canary
          body: Automated canary build for testing
          files: |
            src-tauri/target/release/bundle/**/*  # Ajusta si cambia el path
            **/latest.json
          fail_on_unmatched_files: false
